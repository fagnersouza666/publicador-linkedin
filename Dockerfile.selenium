# Dockerfile usando imagem oficial do Selenium (otimizado)
FROM selenium/standalone-chrome:latest

# Metadados da imagem
LABEL maintainer="publicador-linkedin"
LABEL description="Automatizador LinkedIn com Selenium Grid"
LABEL version="2.1.2"

# Mudar para usuário root temporariamente para instalar dependências
USER root

# Instalar Python e dependências mínimas
RUN apt-get update && apt-get install -y \
    python3-minimal \
    python3-pip \
    python3-venv \
    --no-install-recommends \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get autoremove -y \
    && apt-get autoclean

# Criar diretório de trabalho com permissões corretas
WORKDIR /app
RUN chown -R seluser:seluser /app

# Copiar requirements primeiro para cache do Docker
COPY --chown=seluser:seluser requirements.txt .

# Mudar para usuário seluser para instalação de dependências Python
USER seluser

# Criar ambiente virtual e instalar dependências Python (cache otimizado)
RUN python3 -m venv /home/seluser/venv \
    && . /home/seluser/venv/bin/activate \
    && pip install --no-cache-dir --upgrade pip \
    && pip install --no-cache-dir -r requirements.txt

# Copiar código da aplicação
COPY --chown=seluser:seluser app/ ./app/
COPY --chown=seluser:seluser docker_run_selenium.py .
COPY --chown=seluser:seluser .env.example .

# Configurar ambiente
ENV PATH="/home/seluser/venv/bin:$PATH"
ENV PYTHONPATH="/app"
ENV PYTHONUNBUFFERED=1

# Criar diretórios temporários com permissões corretas
RUN mkdir -p /home/seluser/tmp /home/seluser/.cache /home/seluser/screenshots

# Health check para monitoramento
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD python3 -c "import selenium; print('Selenium OK')" || exit 1

# Comando para executar o script principal (usuário não-root)
CMD ["python3", "docker_run_selenium.py"] 